<?php
/**
 * RefCapabilitiesResponseOptionsOptionsV2
 *
 * PHP version 8.1
 *
 * @category Class
 * @package  MyParcel\CoreApi\Generated\Capabilities
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * MyParcel API
 *
 * Allows MyParcel users to query delivery options, pickup & drop off locations with opening hours, register & trace shipments, print labels and more.
 *
 * The version of the OpenAPI document: 2025-02-13
 * Contact: info@myparcel.nl
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.15.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace MyParcel\CoreApi\Generated\Capabilities\Model;

use \ArrayAccess;
use \MyParcel\CoreApi\Generated\Capabilities\ObjectSerializer;

/**
 * RefCapabilitiesResponseOptionsOptionsV2 Class Doc Comment
 *
 * @category Class
 * @package  MyParcel\CoreApi\Generated\Capabilities
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<string, mixed>
 */
class RefCapabilitiesResponseOptionsOptionsV2 implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = '_ref_capabilities_response_options_options-v2';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'additional_insurance' => '\MyParcel\CoreApi\Generated\Capabilities\Model\RefCapabilitiesResponseOptionsOptionV2',
        'cooled_delivery' => '\MyParcel\CoreApi\Generated\Capabilities\Model\RefCapabilitiesResponseOptionsOptionV2',
        'custom_label_text' => '\MyParcel\CoreApi\Generated\Capabilities\Model\RefCapabilitiesResponseOptionsOptionV2',
        'deliver_at_postal_point' => '\MyParcel\CoreApi\Generated\Capabilities\Model\RefCapabilitiesResponseOptionsOptionV2',
        'delivery_date' => '\MyParcel\CoreApi\Generated\Capabilities\Model\RefCapabilitiesResponseOptionsOptionV2',
        'hide_sender' => '\MyParcel\CoreApi\Generated\Capabilities\Model\RefCapabilitiesResponseOptionsOptionV2',
        'insurance' => '\MyParcel\CoreApi\Generated\Capabilities\Model\RefCapabilitiesResponseOptionsInsuranceOptionV2',
        'no_tracking' => '\MyParcel\CoreApi\Generated\Capabilities\Model\RefCapabilitiesResponseOptionsOptionV2',
        'oversized_package' => '\MyParcel\CoreApi\Generated\Capabilities\Model\RefCapabilitiesResponseOptionsOptionV2',
        'print_return_label_at_drop_off' => '\MyParcel\CoreApi\Generated\Capabilities\Model\RefCapabilitiesResponseOptionsOptionV2',
        'recipient_only_delivery' => '\MyParcel\CoreApi\Generated\Capabilities\Model\RefCapabilitiesResponseOptionsOptionV2',
        'requires_age_verification' => '\MyParcel\CoreApi\Generated\Capabilities\Model\RefCapabilitiesResponseOptionsOptionV2',
        'requires_receipt_code' => '\MyParcel\CoreApi\Generated\Capabilities\Model\RefCapabilitiesResponseOptionsOptionV2',
        'requires_signature' => '\MyParcel\CoreApi\Generated\Capabilities\Model\RefCapabilitiesResponseOptionsOptionV2',
        'return_contribution_fee' => '\MyParcel\CoreApi\Generated\Capabilities\Model\RefCapabilitiesResponseOptionsOptionV2',
        'return_on_first_failed_delivery' => '\MyParcel\CoreApi\Generated\Capabilities\Model\RefCapabilitiesResponseOptionsOptionV2',
        'same_day_delivery' => '\MyParcel\CoreApi\Generated\Capabilities\Model\RefCapabilitiesResponseOptionsOptionV2',
        'saturday_delivery' => '\MyParcel\CoreApi\Generated\Capabilities\Model\RefCapabilitiesResponseOptionsOptionV2',
        'scheduled_collection' => '\MyParcel\CoreApi\Generated\Capabilities\Model\RefCapabilitiesResponseOptionsOptionV2'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'additional_insurance' => null,
        'cooled_delivery' => null,
        'custom_label_text' => null,
        'deliver_at_postal_point' => null,
        'delivery_date' => null,
        'hide_sender' => null,
        'insurance' => null,
        'no_tracking' => null,
        'oversized_package' => null,
        'print_return_label_at_drop_off' => null,
        'recipient_only_delivery' => null,
        'requires_age_verification' => null,
        'requires_receipt_code' => null,
        'requires_signature' => null,
        'return_contribution_fee' => null,
        'return_on_first_failed_delivery' => null,
        'same_day_delivery' => null,
        'saturday_delivery' => null,
        'scheduled_collection' => null
    ];

    /**
      * Array of nullable properties. Used for (de)serialization
      *
      * @var boolean[]
      */
    protected static array $openAPINullables = [
        'additional_insurance' => false,
        'cooled_delivery' => false,
        'custom_label_text' => false,
        'deliver_at_postal_point' => false,
        'delivery_date' => false,
        'hide_sender' => false,
        'insurance' => false,
        'no_tracking' => false,
        'oversized_package' => false,
        'print_return_label_at_drop_off' => false,
        'recipient_only_delivery' => false,
        'requires_age_verification' => false,
        'requires_receipt_code' => false,
        'requires_signature' => false,
        'return_contribution_fee' => false,
        'return_on_first_failed_delivery' => false,
        'same_day_delivery' => false,
        'saturday_delivery' => false,
        'scheduled_collection' => false
    ];

    /**
      * If a nullable field gets set to null, insert it here
      *
      * @var boolean[]
      */
    protected array $openAPINullablesSetToNull = [];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of nullable properties
     *
     * @return array
     */
    protected static function openAPINullables(): array
    {
        return self::$openAPINullables;
    }

    /**
     * Array of nullable field names deliberately set to null
     *
     * @return boolean[]
     */
    private function getOpenAPINullablesSetToNull(): array
    {
        return $this->openAPINullablesSetToNull;
    }

    /**
     * Setter - Array of nullable field names deliberately set to null
     *
     * @param boolean[] $openAPINullablesSetToNull
     */
    private function setOpenAPINullablesSetToNull(array $openAPINullablesSetToNull): void
    {
        $this->openAPINullablesSetToNull = $openAPINullablesSetToNull;
    }

    /**
     * Checks if a property is nullable
     *
     * @param string $property
     * @return bool
     */
    public static function isNullable(string $property): bool
    {
        return self::openAPINullables()[$property] ?? false;
    }

    /**
     * Checks if a nullable property is set to null.
     *
     * @param string $property
     * @return bool
     */
    public function isNullableSetToNull(string $property): bool
    {
        return in_array($property, $this->getOpenAPINullablesSetToNull(), true);
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'additional_insurance' => 'additionalInsurance',
        'cooled_delivery' => 'cooledDelivery',
        'custom_label_text' => 'customLabelText',
        'deliver_at_postal_point' => 'deliverAtPostalPoint',
        'delivery_date' => 'deliveryDate',
        'hide_sender' => 'hideSender',
        'insurance' => 'insurance',
        'no_tracking' => 'noTracking',
        'oversized_package' => 'oversizedPackage',
        'print_return_label_at_drop_off' => 'printReturnLabelAtDropOff',
        'recipient_only_delivery' => 'recipientOnlyDelivery',
        'requires_age_verification' => 'requiresAgeVerification',
        'requires_receipt_code' => 'requiresReceiptCode',
        'requires_signature' => 'requiresSignature',
        'return_contribution_fee' => 'returnContributionFee',
        'return_on_first_failed_delivery' => 'returnOnFirstFailedDelivery',
        'same_day_delivery' => 'sameDayDelivery',
        'saturday_delivery' => 'saturdayDelivery',
        'scheduled_collection' => 'scheduledCollection'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'additional_insurance' => 'setAdditionalInsurance',
        'cooled_delivery' => 'setCooledDelivery',
        'custom_label_text' => 'setCustomLabelText',
        'deliver_at_postal_point' => 'setDeliverAtPostalPoint',
        'delivery_date' => 'setDeliveryDate',
        'hide_sender' => 'setHideSender',
        'insurance' => 'setInsurance',
        'no_tracking' => 'setNoTracking',
        'oversized_package' => 'setOversizedPackage',
        'print_return_label_at_drop_off' => 'setPrintReturnLabelAtDropOff',
        'recipient_only_delivery' => 'setRecipientOnlyDelivery',
        'requires_age_verification' => 'setRequiresAgeVerification',
        'requires_receipt_code' => 'setRequiresReceiptCode',
        'requires_signature' => 'setRequiresSignature',
        'return_contribution_fee' => 'setReturnContributionFee',
        'return_on_first_failed_delivery' => 'setReturnOnFirstFailedDelivery',
        'same_day_delivery' => 'setSameDayDelivery',
        'saturday_delivery' => 'setSaturdayDelivery',
        'scheduled_collection' => 'setScheduledCollection'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'additional_insurance' => 'getAdditionalInsurance',
        'cooled_delivery' => 'getCooledDelivery',
        'custom_label_text' => 'getCustomLabelText',
        'deliver_at_postal_point' => 'getDeliverAtPostalPoint',
        'delivery_date' => 'getDeliveryDate',
        'hide_sender' => 'getHideSender',
        'insurance' => 'getInsurance',
        'no_tracking' => 'getNoTracking',
        'oversized_package' => 'getOversizedPackage',
        'print_return_label_at_drop_off' => 'getPrintReturnLabelAtDropOff',
        'recipient_only_delivery' => 'getRecipientOnlyDelivery',
        'requires_age_verification' => 'getRequiresAgeVerification',
        'requires_receipt_code' => 'getRequiresReceiptCode',
        'requires_signature' => 'getRequiresSignature',
        'return_contribution_fee' => 'getReturnContributionFee',
        'return_on_first_failed_delivery' => 'getReturnOnFirstFailedDelivery',
        'same_day_delivery' => 'getSameDayDelivery',
        'saturday_delivery' => 'getSaturdayDelivery',
        'scheduled_collection' => 'getScheduledCollection'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }


    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[]|null $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(?array $data = null)
    {
        $this->setIfExists('additional_insurance', $data ?? [], null);
        $this->setIfExists('cooled_delivery', $data ?? [], null);
        $this->setIfExists('custom_label_text', $data ?? [], null);
        $this->setIfExists('deliver_at_postal_point', $data ?? [], null);
        $this->setIfExists('delivery_date', $data ?? [], null);
        $this->setIfExists('hide_sender', $data ?? [], null);
        $this->setIfExists('insurance', $data ?? [], null);
        $this->setIfExists('no_tracking', $data ?? [], null);
        $this->setIfExists('oversized_package', $data ?? [], null);
        $this->setIfExists('print_return_label_at_drop_off', $data ?? [], null);
        $this->setIfExists('recipient_only_delivery', $data ?? [], null);
        $this->setIfExists('requires_age_verification', $data ?? [], null);
        $this->setIfExists('requires_receipt_code', $data ?? [], null);
        $this->setIfExists('requires_signature', $data ?? [], null);
        $this->setIfExists('return_contribution_fee', $data ?? [], null);
        $this->setIfExists('return_on_first_failed_delivery', $data ?? [], null);
        $this->setIfExists('same_day_delivery', $data ?? [], null);
        $this->setIfExists('saturday_delivery', $data ?? [], null);
        $this->setIfExists('scheduled_collection', $data ?? [], null);
    }

    /**
    * Sets $this->container[$variableName] to the given data or to the given default Value; if $variableName
    * is nullable and its value is set to null in the $fields array, then mark it as "set to null" in the
    * $this->openAPINullablesSetToNull array
    *
    * @param string $variableName
    * @param array  $fields
    * @param mixed  $defaultValue
    */
    private function setIfExists(string $variableName, array $fields, $defaultValue): void
    {
        if (self::isNullable($variableName) && array_key_exists($variableName, $fields) && is_null($fields[$variableName])) {
            $this->openAPINullablesSetToNull[] = $variableName;
        }

        $this->container[$variableName] = $fields[$variableName] ?? $defaultValue;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets additional_insurance
     *
     * @return \MyParcel\CoreApi\Generated\Capabilities\Model\RefCapabilitiesResponseOptionsOptionV2|null
     */
    public function getAdditionalInsurance()
    {
        return $this->container['additional_insurance'];
    }

    /**
     * Sets additional_insurance
     *
     * @param \MyParcel\CoreApi\Generated\Capabilities\Model\RefCapabilitiesResponseOptionsOptionV2|null $additional_insurance additional_insurance
     *
     * @return self
     */
    public function setAdditionalInsurance($additional_insurance)
    {
        if (is_null($additional_insurance)) {
            throw new \InvalidArgumentException('non-nullable additional_insurance cannot be null');
        }
        $this->container['additional_insurance'] = $additional_insurance;

        return $this;
    }

    /**
     * Gets cooled_delivery
     *
     * @return \MyParcel\CoreApi\Generated\Capabilities\Model\RefCapabilitiesResponseOptionsOptionV2|null
     */
    public function getCooledDelivery()
    {
        return $this->container['cooled_delivery'];
    }

    /**
     * Sets cooled_delivery
     *
     * @param \MyParcel\CoreApi\Generated\Capabilities\Model\RefCapabilitiesResponseOptionsOptionV2|null $cooled_delivery cooled_delivery
     *
     * @return self
     */
    public function setCooledDelivery($cooled_delivery)
    {
        if (is_null($cooled_delivery)) {
            throw new \InvalidArgumentException('non-nullable cooled_delivery cannot be null');
        }
        $this->container['cooled_delivery'] = $cooled_delivery;

        return $this;
    }

    /**
     * Gets custom_label_text
     *
     * @return \MyParcel\CoreApi\Generated\Capabilities\Model\RefCapabilitiesResponseOptionsOptionV2|null
     */
    public function getCustomLabelText()
    {
        return $this->container['custom_label_text'];
    }

    /**
     * Sets custom_label_text
     *
     * @param \MyParcel\CoreApi\Generated\Capabilities\Model\RefCapabilitiesResponseOptionsOptionV2|null $custom_label_text custom_label_text
     *
     * @return self
     */
    public function setCustomLabelText($custom_label_text)
    {
        if (is_null($custom_label_text)) {
            throw new \InvalidArgumentException('non-nullable custom_label_text cannot be null');
        }
        $this->container['custom_label_text'] = $custom_label_text;

        return $this;
    }

    /**
     * Gets deliver_at_postal_point
     *
     * @return \MyParcel\CoreApi\Generated\Capabilities\Model\RefCapabilitiesResponseOptionsOptionV2|null
     */
    public function getDeliverAtPostalPoint()
    {
        return $this->container['deliver_at_postal_point'];
    }

    /**
     * Sets deliver_at_postal_point
     *
     * @param \MyParcel\CoreApi\Generated\Capabilities\Model\RefCapabilitiesResponseOptionsOptionV2|null $deliver_at_postal_point deliver_at_postal_point
     *
     * @return self
     */
    public function setDeliverAtPostalPoint($deliver_at_postal_point)
    {
        if (is_null($deliver_at_postal_point)) {
            throw new \InvalidArgumentException('non-nullable deliver_at_postal_point cannot be null');
        }
        $this->container['deliver_at_postal_point'] = $deliver_at_postal_point;

        return $this;
    }

    /**
     * Gets delivery_date
     *
     * @return \MyParcel\CoreApi\Generated\Capabilities\Model\RefCapabilitiesResponseOptionsOptionV2|null
     */
    public function getDeliveryDate()
    {
        return $this->container['delivery_date'];
    }

    /**
     * Sets delivery_date
     *
     * @param \MyParcel\CoreApi\Generated\Capabilities\Model\RefCapabilitiesResponseOptionsOptionV2|null $delivery_date delivery_date
     *
     * @return self
     */
    public function setDeliveryDate($delivery_date)
    {
        if (is_null($delivery_date)) {
            throw new \InvalidArgumentException('non-nullable delivery_date cannot be null');
        }
        $this->container['delivery_date'] = $delivery_date;

        return $this;
    }

    /**
     * Gets hide_sender
     *
     * @return \MyParcel\CoreApi\Generated\Capabilities\Model\RefCapabilitiesResponseOptionsOptionV2|null
     */
    public function getHideSender()
    {
        return $this->container['hide_sender'];
    }

    /**
     * Sets hide_sender
     *
     * @param \MyParcel\CoreApi\Generated\Capabilities\Model\RefCapabilitiesResponseOptionsOptionV2|null $hide_sender hide_sender
     *
     * @return self
     */
    public function setHideSender($hide_sender)
    {
        if (is_null($hide_sender)) {
            throw new \InvalidArgumentException('non-nullable hide_sender cannot be null');
        }
        $this->container['hide_sender'] = $hide_sender;

        return $this;
    }

    /**
     * Gets insurance
     *
     * @return \MyParcel\CoreApi\Generated\Capabilities\Model\RefCapabilitiesResponseOptionsInsuranceOptionV2|null
     */
    public function getInsurance()
    {
        return $this->container['insurance'];
    }

    /**
     * Sets insurance
     *
     * @param \MyParcel\CoreApi\Generated\Capabilities\Model\RefCapabilitiesResponseOptionsInsuranceOptionV2|null $insurance insurance
     *
     * @return self
     */
    public function setInsurance($insurance)
    {
        if (is_null($insurance)) {
            throw new \InvalidArgumentException('non-nullable insurance cannot be null');
        }
        $this->container['insurance'] = $insurance;

        return $this;
    }

    /**
     * Gets no_tracking
     *
     * @return \MyParcel\CoreApi\Generated\Capabilities\Model\RefCapabilitiesResponseOptionsOptionV2|null
     */
    public function getNoTracking()
    {
        return $this->container['no_tracking'];
    }

    /**
     * Sets no_tracking
     *
     * @param \MyParcel\CoreApi\Generated\Capabilities\Model\RefCapabilitiesResponseOptionsOptionV2|null $no_tracking no_tracking
     *
     * @return self
     */
    public function setNoTracking($no_tracking)
    {
        if (is_null($no_tracking)) {
            throw new \InvalidArgumentException('non-nullable no_tracking cannot be null');
        }
        $this->container['no_tracking'] = $no_tracking;

        return $this;
    }

    /**
     * Gets oversized_package
     *
     * @return \MyParcel\CoreApi\Generated\Capabilities\Model\RefCapabilitiesResponseOptionsOptionV2|null
     */
    public function getOversizedPackage()
    {
        return $this->container['oversized_package'];
    }

    /**
     * Sets oversized_package
     *
     * @param \MyParcel\CoreApi\Generated\Capabilities\Model\RefCapabilitiesResponseOptionsOptionV2|null $oversized_package oversized_package
     *
     * @return self
     */
    public function setOversizedPackage($oversized_package)
    {
        if (is_null($oversized_package)) {
            throw new \InvalidArgumentException('non-nullable oversized_package cannot be null');
        }
        $this->container['oversized_package'] = $oversized_package;

        return $this;
    }

    /**
     * Gets print_return_label_at_drop_off
     *
     * @return \MyParcel\CoreApi\Generated\Capabilities\Model\RefCapabilitiesResponseOptionsOptionV2|null
     */
    public function getPrintReturnLabelAtDropOff()
    {
        return $this->container['print_return_label_at_drop_off'];
    }

    /**
     * Sets print_return_label_at_drop_off
     *
     * @param \MyParcel\CoreApi\Generated\Capabilities\Model\RefCapabilitiesResponseOptionsOptionV2|null $print_return_label_at_drop_off print_return_label_at_drop_off
     *
     * @return self
     */
    public function setPrintReturnLabelAtDropOff($print_return_label_at_drop_off)
    {
        if (is_null($print_return_label_at_drop_off)) {
            throw new \InvalidArgumentException('non-nullable print_return_label_at_drop_off cannot be null');
        }
        $this->container['print_return_label_at_drop_off'] = $print_return_label_at_drop_off;

        return $this;
    }

    /**
     * Gets recipient_only_delivery
     *
     * @return \MyParcel\CoreApi\Generated\Capabilities\Model\RefCapabilitiesResponseOptionsOptionV2|null
     */
    public function getRecipientOnlyDelivery()
    {
        return $this->container['recipient_only_delivery'];
    }

    /**
     * Sets recipient_only_delivery
     *
     * @param \MyParcel\CoreApi\Generated\Capabilities\Model\RefCapabilitiesResponseOptionsOptionV2|null $recipient_only_delivery recipient_only_delivery
     *
     * @return self
     */
    public function setRecipientOnlyDelivery($recipient_only_delivery)
    {
        if (is_null($recipient_only_delivery)) {
            throw new \InvalidArgumentException('non-nullable recipient_only_delivery cannot be null');
        }
        $this->container['recipient_only_delivery'] = $recipient_only_delivery;

        return $this;
    }

    /**
     * Gets requires_age_verification
     *
     * @return \MyParcel\CoreApi\Generated\Capabilities\Model\RefCapabilitiesResponseOptionsOptionV2|null
     */
    public function getRequiresAgeVerification()
    {
        return $this->container['requires_age_verification'];
    }

    /**
     * Sets requires_age_verification
     *
     * @param \MyParcel\CoreApi\Generated\Capabilities\Model\RefCapabilitiesResponseOptionsOptionV2|null $requires_age_verification requires_age_verification
     *
     * @return self
     */
    public function setRequiresAgeVerification($requires_age_verification)
    {
        if (is_null($requires_age_verification)) {
            throw new \InvalidArgumentException('non-nullable requires_age_verification cannot be null');
        }
        $this->container['requires_age_verification'] = $requires_age_verification;

        return $this;
    }

    /**
     * Gets requires_receipt_code
     *
     * @return \MyParcel\CoreApi\Generated\Capabilities\Model\RefCapabilitiesResponseOptionsOptionV2|null
     */
    public function getRequiresReceiptCode()
    {
        return $this->container['requires_receipt_code'];
    }

    /**
     * Sets requires_receipt_code
     *
     * @param \MyParcel\CoreApi\Generated\Capabilities\Model\RefCapabilitiesResponseOptionsOptionV2|null $requires_receipt_code requires_receipt_code
     *
     * @return self
     */
    public function setRequiresReceiptCode($requires_receipt_code)
    {
        if (is_null($requires_receipt_code)) {
            throw new \InvalidArgumentException('non-nullable requires_receipt_code cannot be null');
        }
        $this->container['requires_receipt_code'] = $requires_receipt_code;

        return $this;
    }

    /**
     * Gets requires_signature
     *
     * @return \MyParcel\CoreApi\Generated\Capabilities\Model\RefCapabilitiesResponseOptionsOptionV2|null
     */
    public function getRequiresSignature()
    {
        return $this->container['requires_signature'];
    }

    /**
     * Sets requires_signature
     *
     * @param \MyParcel\CoreApi\Generated\Capabilities\Model\RefCapabilitiesResponseOptionsOptionV2|null $requires_signature requires_signature
     *
     * @return self
     */
    public function setRequiresSignature($requires_signature)
    {
        if (is_null($requires_signature)) {
            throw new \InvalidArgumentException('non-nullable requires_signature cannot be null');
        }
        $this->container['requires_signature'] = $requires_signature;

        return $this;
    }

    /**
     * Gets return_contribution_fee
     *
     * @return \MyParcel\CoreApi\Generated\Capabilities\Model\RefCapabilitiesResponseOptionsOptionV2|null
     */
    public function getReturnContributionFee()
    {
        return $this->container['return_contribution_fee'];
    }

    /**
     * Sets return_contribution_fee
     *
     * @param \MyParcel\CoreApi\Generated\Capabilities\Model\RefCapabilitiesResponseOptionsOptionV2|null $return_contribution_fee return_contribution_fee
     *
     * @return self
     */
    public function setReturnContributionFee($return_contribution_fee)
    {
        if (is_null($return_contribution_fee)) {
            throw new \InvalidArgumentException('non-nullable return_contribution_fee cannot be null');
        }
        $this->container['return_contribution_fee'] = $return_contribution_fee;

        return $this;
    }

    /**
     * Gets return_on_first_failed_delivery
     *
     * @return \MyParcel\CoreApi\Generated\Capabilities\Model\RefCapabilitiesResponseOptionsOptionV2|null
     */
    public function getReturnOnFirstFailedDelivery()
    {
        return $this->container['return_on_first_failed_delivery'];
    }

    /**
     * Sets return_on_first_failed_delivery
     *
     * @param \MyParcel\CoreApi\Generated\Capabilities\Model\RefCapabilitiesResponseOptionsOptionV2|null $return_on_first_failed_delivery return_on_first_failed_delivery
     *
     * @return self
     */
    public function setReturnOnFirstFailedDelivery($return_on_first_failed_delivery)
    {
        if (is_null($return_on_first_failed_delivery)) {
            throw new \InvalidArgumentException('non-nullable return_on_first_failed_delivery cannot be null');
        }
        $this->container['return_on_first_failed_delivery'] = $return_on_first_failed_delivery;

        return $this;
    }

    /**
     * Gets same_day_delivery
     *
     * @return \MyParcel\CoreApi\Generated\Capabilities\Model\RefCapabilitiesResponseOptionsOptionV2|null
     */
    public function getSameDayDelivery()
    {
        return $this->container['same_day_delivery'];
    }

    /**
     * Sets same_day_delivery
     *
     * @param \MyParcel\CoreApi\Generated\Capabilities\Model\RefCapabilitiesResponseOptionsOptionV2|null $same_day_delivery same_day_delivery
     *
     * @return self
     */
    public function setSameDayDelivery($same_day_delivery)
    {
        if (is_null($same_day_delivery)) {
            throw new \InvalidArgumentException('non-nullable same_day_delivery cannot be null');
        }
        $this->container['same_day_delivery'] = $same_day_delivery;

        return $this;
    }

    /**
     * Gets saturday_delivery
     *
     * @return \MyParcel\CoreApi\Generated\Capabilities\Model\RefCapabilitiesResponseOptionsOptionV2|null
     */
    public function getSaturdayDelivery()
    {
        return $this->container['saturday_delivery'];
    }

    /**
     * Sets saturday_delivery
     *
     * @param \MyParcel\CoreApi\Generated\Capabilities\Model\RefCapabilitiesResponseOptionsOptionV2|null $saturday_delivery saturday_delivery
     *
     * @return self
     */
    public function setSaturdayDelivery($saturday_delivery)
    {
        if (is_null($saturday_delivery)) {
            throw new \InvalidArgumentException('non-nullable saturday_delivery cannot be null');
        }
        $this->container['saturday_delivery'] = $saturday_delivery;

        return $this;
    }

    /**
     * Gets scheduled_collection
     *
     * @return \MyParcel\CoreApi\Generated\Capabilities\Model\RefCapabilitiesResponseOptionsOptionV2|null
     */
    public function getScheduledCollection()
    {
        return $this->container['scheduled_collection'];
    }

    /**
     * Sets scheduled_collection
     *
     * @param \MyParcel\CoreApi\Generated\Capabilities\Model\RefCapabilitiesResponseOptionsOptionV2|null $scheduled_collection scheduled_collection
     *
     * @return self
     */
    public function setScheduledCollection($scheduled_collection)
    {
        if (is_null($scheduled_collection)) {
            throw new \InvalidArgumentException('non-nullable scheduled_collection cannot be null');
        }
        $this->container['scheduled_collection'] = $scheduled_collection;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset): bool
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value): void
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset): void
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    #[\ReturnTypeWillChange]
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


