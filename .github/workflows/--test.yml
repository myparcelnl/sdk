name: 'ðŸ”¸ Run tests ðŸ§ª'

on:
  workflow_call:

jobs:
  test:
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      max-parallel: 1 # The SDK currently executes tests against the API even though it should use mocks. This prevents parallel runs from failing due to API rate limits.
      matrix:
        php-version: ['7.4', '8.0', '8.1', '8.2', '8.3', '8.4']
    permissions:
      contents: read
      packages: write
    steps:
      - uses: myparcelnl/actions/setup-app-credentials@v4
        id: credentials
        with:
          app-id: ${{ secrets.MYPARCEL_APP_ID }}
          private-key: ${{ secrets.MYPARCEL_APP_PRIVATE_KEY }}

      - uses: actions/checkout@v4
        if: github.actor != 'dependabot[bot]'
        with:
          token: ${{ steps.credentials.outputs.token }}

      - name: 'Handle coverage cache'
        if: github.actor != 'dependabot[bot]'
        uses: actions/cache@v4
        id: cache-coverage
        with:
          path: ./coverage.xml
          key: ${{ runner.os }}-${{ matrix.php-version }}-coverage-${{ hashFiles('./src/**', './test/**') }}

      - uses: myparcelnl/actions/pull-docker-image@v4
        if: github.actor != 'dependabot[bot]' && steps.cache-coverage.outputs.cache-hit != 'true'
        id: docker
        with:
          image: ghcr.io/myparcelnl/php-xd:${{ matrix.php-version }}

      - name: 'Install composer dependencies'
        if: github.actor != 'dependabot[bot]'
        run: |
          docker run \
            --volume $PWD:/app \
            --volume $HOME/.composer:/root/.composer \
            --env COMPOSER_CACHE_DIR=/root/.composer \
            ${{ steps.docker.outputs.image }} \
            composer install --no-progress --no-scripts --no-plugins

      - name: 'Determine test strategy'
        id: test-strategy
        run: |
          if [[ "${{ matrix.php-version }}" == "8.4" && "${{ github.actor }}" != "dependabot[bot]" && "${{ steps.cache-coverage.outputs.cache-hit }}" != "true" ]]; then
            echo "run-coverage=true" >> $GITHUB_OUTPUT
            echo "run-normal=false" >> $GITHUB_OUTPUT
          else
            echo "run-coverage=false" >> $GITHUB_OUTPUT
            echo "run-normal=true" >> $GITHUB_OUTPUT
          fi

      - name: 'Run tests'
        if: steps.test-strategy.outputs.run-normal == 'true'
        run: |
          docker run \
            --volume $PWD:/app \
            --env CI=${CI} \
            --env API_KEY_NL=${{ secrets.API_KEY_NL }} \
            --env API_KEY_BE=${{ secrets.API_KEY_BE }} \
            ${{ steps.docker.outputs.image }} \
            vendor/bin/phpunit

      # Run coverage only for the latest php version
      - name: 'Run tests (with coverage)'
        if: steps.test-strategy.outputs.run-coverage == 'true'
        run: |
          docker run \
            --volume $PWD:/app \
            --env CI=${CI} \
            --env XDEBUG_MODE=coverage \
            --env API_KEY_NL=${{ secrets.API_KEY_NL }} \
            --env API_KEY_BE=${{ secrets.API_KEY_BE }} \
            ${{ steps.docker.outputs.image }} \
            vendor/bin/phpunit --coverage-clover coverage.xml

      - name: 'Get coverage file from container'
        if: steps.test-strategy.outputs.run-coverage == 'true'
        run: |
          docker cp $(docker ps -alq):/app/coverage.xml .

      - name: 'Update code coverage'
        if: steps.test-strategy.outputs.run-coverage == 'true'
        uses: codecov/codecov-action@v4
